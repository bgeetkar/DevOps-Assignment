name: Docker Compose CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  run-docker-compose:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Start Docker Compose services
        run: docker compose up -d  # Use 'docker compose' instead of 'docker-compose'

      - name: Check running containers
        run: docker ps -a

      # Step 4: Install exposed ports dynamically
      - name: instal ngrok-agent for networking and port exposing
        run: |
          # Install ngrok
          curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null
          echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list
          sudo apt-get update && sudo apt-get install ngrok

      - name: Create ngrok config file
        run: |
          mkdir -p ~/.ngrok
          echo "authtoken: ${{ secrets.NGROK_AUTH_TOKEN }}" > ~/.ngrok/ngrok.yml
          echo "tunnels:" >> ~/.ngrok/ngrok.yml
          echo "  frontend:" >> ~/.ngrok/ngrok.yml
          echo "    addr: $FRONTEND_PORT" >> ~/.ngrok/ngrok.yml
          echo "    proto: http" >> ~/.ngrok/ngrok.yml
          echo "  backend:" >> ~/.ngrok/ngrok.yml
          echo "    addr: $BACKEND_PORT" >> ~/.ngrok/ngrok.yml
          cat ~/.ngrok/ngrok.yml
 
      - name: Expose Services with ngrok
        run: |
          ngrok start --config ~/.ngrok/ngrok.yml --all &
          sleep 5  # Give ngrok time to establish the tunnels
      
          # Fetch the URLs from ngrok API
          FRONTEND_URL=$(curl --silent http://localhost:4040/api/tunnels | jq -r '.tunnels[0].public_url')
          BACKEND_URL=$(curl --silent http://localhost:4040/api/tunnels | jq -r '.tunnels[1].public_url')
      
          # Output URLs
          echo "Frontend URL: $FRONTEND_URL"
          echo "Backend URL: $BACKEND_URL"
