name: Docker Compose CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  run-docker-compose:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Start Docker Compose services
        run: docker compose up -d  # Use 'docker compose' instead of 'docker-compose'

      - name: Check running containers
        run: docker ps

      # Step 4: Get all container names and store them in GitHub environment variables
      - name: Export Container Names to ENV
        run: |
          # Fetch container names and assign them to variables
          FRONTEND_CONTAINER=$(docker ps --filter "name=frontend" --format "{{.Names}}")
          BACKEND_CONTAINER=$(docker ps --filter "name=backend" --format "{{.Names}}")
          DB_CONTAINER=$(docker ps --filter "name=mongo" --format "{{.Names}}")

          # Save variables as environment variables
          echo "FRONTEND_CONTAINER=$FRONTEND_CONTAINER" >> $GITHUB_ENV
          echo "BACKEND_CONTAINER=$BACKEND_CONTAINER" >> $GITHUB_ENV
          echo "DB_CONTAINER=$DB_CONTAINER" >> $GITHUB_ENV

          # Debug output
          echo "Frontend Container: $FRONTEND_CONTAINER"
          echo "Backend Container: $BACKEND_CONTAINER"
          echo "Database Container: $DB_CONTAINER"

      # Step 5: Fetch exposed ports dynamically
      - name: Fetch Exposed Ports
        run: |
          # Frontend Port
          FRONTEND_PORT=$(docker inspect --format='{{(index (index .NetworkSettings.Ports "3000/tcp") 0).HostPort}}' $FRONTEND_CONTAINER)
          echo "FRONTEND_PORT=$FRONTEND_PORT" >> $GITHUB_ENV

          # Backend Port
          BACKEND_PORT=$(docker inspect --format='{{(index (index .NetworkSettings.Ports "5000/tcp") 0).HostPort}}' $BACKEND_CONTAINER)
          echo "BACKEND_PORT=$BACKEND_PORT" >> $GITHUB_ENV

          # Database Port
          DB_PORT=$(docker inspect --format='{{(index (index .NetworkSettings.Ports "27017/tcp") 0).HostPort}}' $DB_CONTAINER)
          echo "DB_PORT=$DB_PORT" >> $GITHUB_ENV

          # Debug outputs
          echo "Frontend URL: http://localhost:$FRONTEND_PORT"
          echo "Backend URL: http://localhost:$BACKEND_PORT"
          echo "Database URL: mongodb://localhost:$DB_PORT"

      # Step 6: Save URLs to a file
      - name: Save URLs to File
        run: |
          echo "Frontend: http://localhost:$FRONTEND_PORT" > url.txt
          echo "Backend: http://localhost:$BACKEND_PORT" >> url.txt
          echo "Database: mongodb://localhost:$DB_PORT" >> url.txt

      # Step 7: Upload URL file as an artifact
      - name: Upload URLs Artifact
        uses: actions/upload-artifact@v4
        with:
          name: service-urls
          path: url.txt
